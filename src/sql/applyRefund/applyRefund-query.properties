selectList=SELECT REFUND_PK, R.PAYMENT_PK, M.MEMBER_PK, MEMBER_NAME, MEMBER_PHONE, MEMBER_EMAIL, ARTIST_PK, REASON, REQUESTED_TIME FROM REFUND R JOIN lESSON_PAYMENT P ON (P.PAYMENT_PK = R.PAYMENT_PK) JOIN MEMBER M ON (M.MEMBER_PK = P.MEMBER_PK) WHERE REFUND_ACCEPTED = 0
selectDetail=SELECT PAYMENT_IMP_NUM, LESSON_NAME, PAYMENT_COSTS, POINTS_USED, COSTS, (SELECT COUNT(LESSON_ORDER_TIME) FROM LESSON_ORDER WHERE SCHEDULE_PK = (SELECT LESSON_SCHEDULE_PK FROM LESSON_PAYMENT WHERE PAYMENT_PK = ?)) AS TOTAL_ORDER, (SELECT COUNT(LESSON_ORDER_TIME) FROM LESSON_ORDER WHERE SCHEDULE_PK = (SELECT LESSON_SCHEDULE_PK FROM LESSON_PAYMENT WHERE PAYMENT_PK = ?) AND LESSON_ORDER_START < SYSDATE) AS FINISH_ORDER, REASON, REASON_DETAIL, REFUSE_REASON FROM LESSON_PAYMENT P JOIN REFUND R ON (P.PAYMENT_PK = R.PAYMENT_PK) JOIN LESSON_SCHEDULE LS ON (P.LESSON_SCHEDULE_PK = LS.SCHEDULE_PK) JOIN LESSON L ON (LS.LESSON_PK = L.LESSON_PK) WHERE P.PAYMENT_PK = ?
selectRefuseList=SELECT REFUND_PK, R.PAYMENT_PK, M.MEMBER_PK, MEMBER_NAME, MEMBER_PHONE, MEMBER_EMAIL, ARTIST_PK, REASON, REQUESTED_TIME FROM REFUND R JOIN lESSON_PAYMENT P ON (P.PAYMENT_PK = R.PAYMENT_PK) JOIN MEMBER M ON (M.MEMBER_PK = P.MEMBER_PK) WHERE REFUND_ACCEPTED = 2
refuseRefund=UPDATE REFUND SET REFUND_ACCEPTED = 2, REFUSE_REASON = ? WHERE REFUND_PK = ?
cancelRefuse=UPDATE REFUND SET REFUND_ACCEPTED = 0, REFUSE_REASON = NULL WHERE REFUND_PK = ?
showMyReg=SELECT LS.SCHEDULE_PK, (SELECT IMAGE_ROUTE FROM IMAGE WHERE IMAGE_TYPE = 'lesson' AND IMAGE_MAIN = 0 AND IMAGE_FK_PK = (SELECT L.LESSON_PK FROM LESSON_PAYMENT P JOIN LESSON_SCHEDULE LS ON (P.LESSON_SCHEDULE_PK = LS.SCHEDULE_PK) JOIN LESSON L ON (LS.LESSON_PK = L.LESSON_PK) WHERE PAYMENT_PK = ? ) ) AS LESSON_IMG_ROUTE, (SELECT IMAGE_NAME FROM IMAGE WHERE IMAGE_TYPE = 'lesson' AND IMAGE_MAIN = 0 AND IMAGE_FK_PK = (SELECT L.LESSON_PK FROM LESSON_PAYMENT P JOIN LESSON_SCHEDULE LS ON (P.LESSON_SCHEDULE_PK = LS.SCHEDULE_PK) JOIN LESSON L ON (LS.LESSON_PK = L.LESSON_PK) WHERE PAYMENT_PK = ? ) ) AS LESSON_IMG_NAME, LESSON_NAME, (SELECT LESSON_ORDER_START FROM LESSON_ORDER WHERE SCHEDULE_PK = (SELECT LESSON_SCHEDULE_PK FROM LESSON_PAYMENT WHERE PAYMENT_PK = ?) AND LESSON_ORDER_TIME = 1 ) AS START_DATE, REGION, PAYMENT_PK, PAYMENT_DATE, (SELECT IMAGE_ROUTE FROM IMAGE WHERE IMAGE_TYPE = 'profile' AND IMAGE_FK_PK = (SELECT ARTIST_PK FROM LESSON_PAYMENT P JOIN LESSON_SCHEDULE LS ON (P.LESSON_SCHEDULE_PK = LS.SCHEDULE_PK) WHERE PAYMENT_PK = ? ) ) AS ARTIST_IMG_ROUTE, (SELECT IMAGE_NAME FROM IMAGE WHERE IMAGE_TYPE = 'profile' AND IMAGE_FK_PK = (SELECT ARTIST_PK FROM LESSON_PAYMENT P JOIN LESSON_SCHEDULE LS ON (P.LESSON_SCHEDULE_PK = LS.SCHEDULE_PK) WHERE PAYMENT_PK = ? ) ) AS ARTIST_IMG_NAME, (SELECT ARTIST_NICK FROM MEMBER WHERE MEMBER_PK = (SELECT ARTIST_PK FROM LESSON_PAYMENT WHERE PAYMENT_PK = ?)) AS ARTIST_NICK, (SELECT MEMBER_NAME FROM MEMBER WHERE MEMBER_PK = (SELECT ARTIST_PK FROM LESSON_PAYMENT WHERE PAYMENT_PK = ?)) AS ARTIST_NAME FROM LESSON L JOIN LESSON_SCHEDULE LS ON (L.LESSON_PK = LS.LESSON_PK) JOIN LESSON_PAYMENT P ON (LS.SCHEDULE_PK = P.LESSON_SCHEDULE_PK) JOIN LESSON_ORDER LO ON (LS.SCHEDULE_PK = LO.SCHEDULE_PK) WHERE PAYMENT_PK = ? AND LESSON_ORDER_TIME = 1
showApplyForm=SELECT PAYMENT_COSTS, LESSON_SCHEDULE_PK, POINTS_USED, (SELECT COUNT(LESSON_ORDER_TIME) FROM LESSON_ORDER WHERE SCHEDULE_PK = (SELECT LESSON_SCHEDULE_PK FROM LESSON_PAYMENT WHERE PAYMENT_PK = ?)) AS TOTAL_ORDER, (SELECT COUNT(LESSON_ORDER_TIME) FROM LESSON_ORDER WHERE SCHEDULE_PK = (SELECT LESSON_SCHEDULE_PK FROM LESSON_PAYMENT WHERE PAYMENT_PK = ?) AND LESSON_ORDER_START < SYSDATE) AS FINISH_ORDER FROM LESSON_PAYMENT WHERE PAYMENT_PK = ?
insertApplyRefund=INSERT INTO REFUND VALUES (REFUND_SEQ.NEXTVAL, ?, ?, ?, SYSDATE, DEFAULT, DEFAULT, DEFAULT, ?)