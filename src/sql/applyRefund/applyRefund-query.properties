selectList=SELECT REFUND_PK, R.PAYMENT_PK, M.MEMBER_PK, MEMBER_NAME, MEMBER_PHONE, MEMBER_EMAIL, ARTIST_PK, REASON, REQUESTED_TIME FROM REFUND R JOIN lESSON_PAYMENT P ON (P.PAYMENT_PK = R.PAYMENT_PK) JOIN MEMBER M ON (M.MEMBER_PK = P.MEMBER_PK) WHERE REFUND_ACCEPTED = 0
selectDetail=SELECT PAYMENT_IMP_NUM, LESSON_NAME, PAYMENT_COSTS, POINTS_USED, REASON, REASON_DETAIL, L.ARTIST_PK, (SELECT COUNT(LESSON_ORDER_TIME) FROM LESSON_ORDER) AS TOTAL_ORDER, (SELECT COUNT(LESSON_ORDER_TIME) FROM LESSON_ORDER WHERE LESSON_ORDER_START < SYSDATE) AS FINISH_ORDER, (SELECT COUNT(LESSON_ORDER_TIME) FROM LESSON_ORDER WHERE LESSON_ORDER_START > SYSDATE) AS LEFT_ORDER, REFUSE_REASON FROM LESSON_PAYMENT P JOIN LESSON_SCHEDULE LS ON (P.LESSON_SCHEDULE_PK = LS.SCHEDULE_PK) JOIN LESSON_ORDER LO ON (P.LESSON_SCHEDULE_PK = LO.SCHEDULE_PK) JOIN LESSON L ON (LS.LESSON_PK = L.LESSON_PK) JOIN MEMBER M ON (L.ARTIST_PK = M.MEMBER_PK) JOIN REFUND R ON (R.PAYMENT_PK = P.PAYMENT_PK) WHERE P.PAYMENT_PK = ?
selectRefuseList=SELECT REFUND_PK, R.PAYMENT_PK, M.MEMBER_PK, MEMBER_NAME, MEMBER_PHONE, MEMBER_EMAIL, ARTIST_PK, REASON, REQUESTED_TIME FROM REFUND R JOIN lESSON_PAYMENT P ON (P.PAYMENT_PK = R.PAYMENT_PK) JOIN MEMBER M ON (M.MEMBER_PK = P.MEMBER_PK) WHERE REFUND_ACCEPTED = 2
refuseRefund=UPDATE REFUND SET REFUND_ACCEPTED = 2, REFUSE_REASON = ? WHERE REFUND_PK = ?
cancelRefuse=UPDATE REFUND SET REFUND_ACCEPTED = 0, REFUSE_REASON = NULL WHERE REFUND_PK = ?
