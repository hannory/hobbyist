selectList=SELECT REFUND_PK, P.PAYMENT_PK, MEMBER_NAME, (SELECT MEMBER_NAME FROM MEMBER WHERE MEMBER_PK = P.ARTIST_PK) AS ARTIST_NAME, MEMBER_PHONE, PAYMENT_DATE, REFUND_DATE FROM REFUND R JOIN lESSON_PAYMENT P ON (P.PAYMENT_PK = R.PAYMENT_PK) JOIN MEMBER M ON (M.MEMBER_PK = P.MEMBER_PK) WHERE REFUND_ACCEPTED = 1 ORDER BY REFUND_DATE DESC
approveRefund=UPDATE REFUND SET REFUND_ACCEPTED = 1, REFUND_DATE = SYSDATE WHERE PAYMENT_PK = ?
insertReturnUsingPoint=INSERT INTO MEMBER_POINTS VALUES (MEMBER_POINTS_SEQ.NEXTVAL, SYSDATE, ?, (SELECT MEMBER_PK FROM LESSON_PAYMENT WHERE PAYMENT_PK = ?), 3, ?, ?)
insertReCollectPoint=INSERT INTO MEMBER_POINTS VALUES (MEMBER_POINTS_SEQ.NEXTVAL, SYSDATE, ?, (SELECT MEMBER_PK FROM LESSON_PAYMENT WHERE PAYMENT_PK = ?), 4, ?, ?)
updatePoint=UPDATE MEMBER SET MEMBER_POINT = MEMBER_POINT + ? - ? WHERE MEMBER_PK = (SELECT MEMBER_PK FROM LESSON_PAYMENT WHERE PAYMENT_PK = ?)
refundList=SELECT REFUND_PK, LESSON_NAME, (SELECT MEMBER_NAME FROM MEMBER WHERE MEMBER_PK = P.ARTIST_PK) AS ARTIST_NAME, REFUND_DATE, PAYMENT_COSTS, COSTS, REFUND_ACCEPTED FROM LESSON_PAYMENT P JOIN LESSON_SCHEDULE LS ON (LS.SCHEDULE_PK = P.LESSON_SCHEDULE_PK) JOIN LESSON L ON (LS.LESSON_PK = L.LESSON_PK) JOIN REFUND R ON (P.PAYMENT_PK = R.PAYMENT_PK) JOIN MEMBER M ON (P.MEMBER_PK = M.MEMBER_PK) WHERE M.MEMBER_PK = ? ORDER BY REFUND_PK DESC